a
sum(a)
sum(c(1e32, 1, -1e32))
sum(c(1e24, 1, -1e24))
sum(c(1e20, 1, -1e20))
sum(c(1e18, 1, -1e18))
sum(c(1e19, 1, -1e19))
1000000/17.1
1000000/18.6
1126.6/6118.2
127/902 * 117
21/761
21/782
21/761 * 2
3.85*40
exp(30*0.05)
exp(30*0.02)
3 * choose(60, 10) - 3 * choose(30, 10)
choose(90, 10) - choose(9, 2)
?rep
rep(5, 3)
rep(c(1,3), 2)
rep(c(1,3), each=2)
x <- c('stat', "A", "A B", 'C')
x
letters[3:6]
LETTERS[c(1, 14, 26)]
1:5 < 3
T & F
T && F
??sum
?sum
(1:5)[3]
(1:5)[c(T, F)]
(1:5)[c(T, T, F, F, T, T)]
(1:5)[(1:5) % 2 == 0]
(1:5)[(1:5) %% 2 == 0]
x <- 1:5
x[x %% 3 == 0]
x <- c(1,3,5,7,9)
x[x %% 3 == 0]
x[which(x %% 3 == 0)]
3 ** 2
x <- matrix(1:12, nrow=3)
x
x ** x
df <- data.frame(num=1:6, let=letters[6:1])
df
df[,1]
x <- 1:10
y <- x ^ 2
plot(x, y)
plot(x, y, type="l")
plot(x, y, type="l")
plot(x, y)
plot(x, y, type="l")
x <- rnorm(1000)
hist(x)
hist(x, probability = T)
qqnorm(x)
qqline(x)
?qqplot
y <- rnorm(2000, mean = 1, sd = 2)
qqplot(x, y)
qqline(x, y)
qqline(y)
qqplot(x, y)
qqline(y)
qqline(x)
qqnorm(x)
qqline(x, col="red")
qqplot(x, y)
qqline(y, col="red")
setwd("~/Desktop/SleepHealth/CovariatesMerging")
library(survey)
library(tidyverse)
?svyby
df_all <- read.csv("CleanedData.csv", strip.white = T)
design <- svydesign(data = df_all, id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR, nest = T)
df <- subset(df_all, inAnalysis == "True")
adj_name_lst <- c("RIDAGEYR", "gender", "education_dichotomous", "marital_status", "race", "smoking_status", "alcohol")
adj_type_lst <- c("n", "f", "f", "f", "f", "f", "n")
adj_ref_lst <- c("", "Male", "", "Not Married", "Other", "0", "1")
for(i in 1:length(adj_name_lst)){
if(adj_type_lst[i] == "f"){
df[, adj_name_lst[i]] <- relevel(factor(df[, adj_name_lst[i]]), ref = adj_ref_lst[i])
}
}
weight_var <- "WTMEC2YR"
svyby(~RA, ~gender, df, svymean, na.rm=T)
df <- subset(design, inAnalysis == "True")
head(df)
df
svyby(~RA, ~gender, df, svymean, na.rm=T)
svyby(~RA, ~gender, df, svymean)
svyby(~RA, ~gender, df, svymean, na.rm=T)
df_all <- read.csv("CleanedData.csv", strip.white = T)
adj_name_lst <- c("RIDAGEYR", "gender", "education_dichotomous", "marital_status", "race", "smoking_status", "alcohol")
adj_type_lst <- c("n", "f", "f", "f", "f", "f", "n")
adj_ref_lst <- c("", "Male", "", "Not Married", "Other", "0", "1")
for(i in 1:length(adj_name_lst)){
if(adj_type_lst[i] == "f"){
df_all[, adj_name_lst[i]] <- relevel(factor(df_all[, adj_name_lst[i]]), ref = adj_ref_lst[i])
}
}
design <- svydesign(data = df_all, id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR, nest = T)
df <- subset(design, inAnalysis == "True")
weight_var <- "WTMEC2YR"
svyby(~RA, ~gender, df, svymean, na.rm=T)
svyby(~RA, ~education_dichotomous, df, svymean, na.rm=T)
svyby(~RA, ~education_dichotomous, df, svymean, na.rm=T)["College"]
svyby(~RA, ~education_dichotomous, df, svymean, na.rm=T)["College",]
svymean(~RA, df, na.rm = T)
svymean(~RA, df, na.rm = T)["mean"]
svymean(~RA, df, na.rm = T)[,"mean"]
svymean(~RA, df, na.rm = T)[1]
svymean(~RA, df, na.rm = T)[2]
svymean(~RA, df, na.rm = T)[[1]]
svymean(~RA, df, na.rm = T)[[2]]
svymean(~RA, df, na.rm = T)
x <- svymean(~RA, df, na.rm = T)
x
length(x)
x[1]
x[2]
x[1][2]
x[1][1]
class(x)
x
x["RA"]
x["SE"]
x["se"]
as.matrix(x)
SE(x)
x
mean(x)
SE(x)
se(x)
sd(x)
mean(x)
class(SE(x))
SE(x)[1]
x[1]
x[[1]]
svymean(~gender, df)
svymean(~gender, df, na.rm=T)
df$variables
table(df$variables$gender)
svymean(~gender, df, na.rm=T)
1072 / (1072 + 1189)
y <-svymean(~gender, df, na.rm=T)
x
y
class(y)
as.matrix(y)
4224 / (4224 + 3976)
count(df, gender)
df %>% count(gender, wt = WTMEC2YR)
df$variables %>% count(gender, wt = WTMEC2YR)
df$variables %>% count(gender, wt = ~WTMEC2YR)
count(df$variables$gender, wt = df$variables[, weight_var])
df$variables$gender
count(df$variables$gender, wt = df$variables[, weight_var])
count(as.character(df$variables$gender), wt = df$variables[, weight_var])
?count
count(df$variables, gender, wt = df$variables[, weight_var])
count(df$variables, gender, wt = WTMEC2YR)
count(df$variables, gender, wt = weight_var)
list("a" = list(name = "des", val=1))
list("a" = list(name = "des", val=1))[["a"]]
comp_name_lst <- c("RIDAGEYR", "gender", "race", "marital_status", "education_dichotomous", "smoking_status", "alcohol", "sleep_duration", "BMXBMI", "Obesity", "BMXWAIST", "central_adiposity", "LBXGLU", "diabetes_status", "systolic_BP", "diastolic_BP", "HTN_status", "cvd_status", "IS60", "IV60", "M10_midpoint", "M10_cnt", "L5_midpoint", "L5_cnt", "RA")
comp_type_lst <- c("n", "f", "f", "f", "f", "f", "n", "n", "n", "f", "n", "f", "n", "f", "n", "n", "f", "f", "n", "n", "n", "n", "n", "n", "n")
length(comp_name_lst)
length(comp_type_lst)
for(i in 1:25){
print(paste0(comp_name_lst[i], ": ", comp_type_lst[i]))
}
library(jsonlite)
setwd("~/Desktop/BINF4006/HW/HW3")
drug_label_1 <- fromJSON("drug-label-0010-of-0010.json")
names(drug_label_1)
drug_label_1$meta
drug_label_1$results
class(drug_label_1$results)
drug_label_1_df <- drug_label_1$results
head(drug_label_1_df)
colnames(drug_label_1_df)
drug_label_1_df$adverse_reactions_table[1]
drug_label_1_df[1,]$adverse_reactions_table
drug_label_1_df[1,]$adverse_reactions
drug_label_1 <- read_json("drug-label-0010-of-0010.json")
names(drug_label_1)
drug_label_1$meta
drug_label_1$results
drug_label_1$results[[1]]
names(drug_label_1$results[[1]])
drug_label_1$results[[1]]$id
drug_label_1$results[[1]]$adverse_reactions
drug_event_sample <- read_json("drug-event-sample.json")
drug_event_sample$meta
drug_event_sample$results
drug_event_sample$results[[1]]
drug_event_sample$results[[1]]$patient$reaction
drug_event_sample$results[[1]]$patient$reaction[[1]]
setwd("~/Desktop/SleepHealth/CovariatesMerging")
library(survey)
?svyttest
?svydesign
?subset
df_all$SDMVPSU
df_all$SDMVPSU %>% unique()
df_all$SDMVSTRA %>% unique()
df_all$WTSAF2YR
is.na(df_all$WTSAF2YR)
sum(is.na(df_all$WTSAF2YR))
sum(is.null(df_all$WTSAF2YR))
sum(is.null(df_all$WTINT2YR))
sum(is.null(df_all$WTMEC2YR))
df_all <- read.csv("CleanedData.csv", strip.white = T)
sum(is.null(df_all$WTMEC2YR))
sum(is.null(df_all$WTSAF2YR))
sum(is.na(df_all$WTSAF2YR))
sum(is.na(df_all$WTMEC2YR))
sum(is.na(df_all$WTINT2YR))
round(48.222323, 2)
?svychisq
design <- svydesign(data = df_all, id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR, nest = T)
df <- subset(design, inAnalysis == "True")
df
df_all["RA_above"] <- as.numeric(df_all$RA > cutoff)
cutoff <- median(df_all$RA, na.rm=T)
df_all["RA_above"] <- as.numeric(df_all$RA > cutoff)
design <- svydesign(data = df_all, id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR, nest = T)
df <- subset(design, inAnalysis == "True")
svychisq(RA_above ~ gender, df)
df
df_all$gender
svychisq(RA_above ~ gender, df)
df_all$RA_above
sum(is.na(df_all$RA))
sum(is.na(df_all[!is.na(df_all$WTMEC2YR),]$RA))
svychisq(RA_above ~ gender, df, statistics = "Chisq")
svychisq(~RA_above + gender, df, statistics = "Chisq")
svychisq(~RA_above + gender, df, statistics = "Chisq") %>% summary()
svychisq(~RA_above + gender, df, statistics = "Chisq")$p.value
svychisq(~RA_above + gender, df, statistics = "Chisq")$p.value[[1]]
svymean(~gender, df, na.rm = T)
svymean(~gender, df, na.rm = T) %>% as.matrix()
levels(df_all$gender)
(svymean(~gender, df, na.rm = T) %>% as.matrix())["genderFemale",]
(svymean(~gender, df, na.rm = T) %>% as.matrix())["genderFemale",1]
(svymean(~gender, df, na.rm = T) %>% as.matrix())["genderMale",]
svymean(~gender, df, na.rm = T)
SE(svymean(~gender, df, na.rm = T))
SE(svymean(~gender, df, na.rm = T)) %>% as.vector()
SE(svymean(~gender, df, na.rm = T))["genderFemale"]
SE(svymean(~gender, df, na.rm = T))["genderFemale"][[1]]
svymean(~gender, df, na.rm = T)
svysum(~gender, df, na.rm = T)
survey::svytotal(~gender, df, na.rm = T)
survey::svytotal(~gender, df, na.rm = T) %>% as.matrix()
data_info <- list(
"RIDAGEYR" = list(type = "n", weight_var = "WTINT2YR"),
"gender" = list(type = "f", weight_var = "WTINT2YR", ref = "Male"),
"race" = list(type = "f", weight_var = "WTINT2YR", ref = "Other"),
"marital_status" = list(type = "f", weight_var = "WTINT2YR", ref = "Not Married"),
"education_dichotomous" = list(type = "f", weight_var = "WTINT2YR", ref = ""),
"smoking_status" = list(type = "f", weight_var = "WTMEC2YR", ref = "0"),
"alcohol" = list(type = "n", weight_var = "WTMEC2YR", ref = "1"),
"sleep_duration" = list(type = "n", weight_var = ""),
"BMXBMI" = list(type = "n", weight_var = "WTMEC2YR"),
"Obesity" = list(type = "f", weight_var = ""),
"BMXWAIST" = list(type = "n", weight_var = "WTMEC2YR"),
"central_adiposity" = list(type = "f", weight_var = "WTMEC2YR", ref = "0"),
"LBXGLU" = list(type = "n", weight_var = "WTSAF2YR"),
"diabetes_status" = list(type = "f", weight_var = "WTSAF2YR", ref = "0"),
"systolic_BP" = list(type = "n", weight_var = "WTMEC2YR"),
"diastolic_BP" = list(type = "n", weight_var = "WTMEC2YR"),
"HTN_status" = list(type = "f", weight_var = "WTMEC2YR", ref = "0"),
"HTN_old_status" = list(type = "f", weight_var = "WTMEC2YR", ref = "0"),
"cvd_status" = list(type = "f", weight_var = "WTINT2YR", ref = "0"),
"IS60" = list(type = "n", weight_var = "WTINT2YR"),
"IV60" = list(type = "n", weight_var = "WTINT2YR"),
"M10_midpoint" = list(type = "n", weight_var = "WTINT2YR"),
"M10_cnt" = list(type = "n", weight_var = "WTINT2YR"),
"L5_midpoint" = list(type = "n", weight_var = "WTINT2YR"),
"L5_cnt" = list(type = "n", weight_var = "WTINT2YR"),
"RA" = list(type = "n", weight_var = "WTINT2YR")
)
names(data_info)
df_all$alcohol %>% unique()
?svyglm
rse_gene
knitr::opts_chunk$set(echo = TRUE)
library(recount)
library(GenomicRanges)
library(limma)
library(edgeR)
library(DESeq2)
library(regionReport)
#library(clusterProfiler)
library(org.Hs.eg.db)
library(gplots)
library(derfinder)
#library(GenomicState)
library(bumphunter)
library(derfinderPlot)
library(sessioninfo)
library(tidyverse)
download_study("SRP056604")
load("SRP056604/rse_gene.Rdata")
setwd("~/Desktop/BINF4006/Labs")
load("SRP056604/rse_gene.Rdata")
getwd()
load("SRP056604/rse_gene.Rdata")
rse_gene
colData(rse_gene)
class(colData(rse_gene))
colData(rse_gene)$characteristics
colData(rse_gene)$characteristics[[1]]
dim(colData(rse_gene))
colData(rse_gene)$characteristics[[1]] %>% map_dfr(, .f = function(x){x})
colData(rse_gene)$characteristics %>% map_dfr(, .f = function(x){x})
colData(rse_gene)$characteristics %>% as.list() %>% map_dfr(, .f = function(x){x})
colData(rse_gene)$characteristics %>% as.list()
colData(rse_gene)$characteristics[[1]][1]
colData(rse_gene)$characteristics[[1]][1] %>% str_split(, ":")
colData(rse_gene)$characteristics[[1]][1] %>% str_split(":")
colData(rse_gene)$characteristics[[1]][1] %>% str_split(": ")
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
for(elem in demo_info){
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
}
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
for(i in 1:length(demo_info)){
elem <- demo_info[[i]]
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
}
df <- cbind(colData(rse_gene),
data.frame(Age = age_vec, Sex = sex_vec,
Case = case_vec))
df
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
for(i in 1:length(demo_info)){
elem <- demo_info[[i]]
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
}
df <- cbind(colData(rse_gene),
data.frame(Age = age_vec, Sex = sex_vec,
Case = case_vec))
colData(rse_gene) <- df
df
colData(rse_gene)
add_predictions(rse_gene)
add_metadata(rse_gene)
?DESeqDataSet
DESeqDataSet(rse_gene, ~ Sex + Age + pmi + Case)
colData(rse_gene)
rse_gene <- scale_counts(rse_gene)
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
for(i in 1:length(demo_info)){
elem <- demo_info[[i]]
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
}
df <- cbind(colData(rse_gene),
data.frame(Age = age_vec, Sex = sex_vec,
Case = case_vec))
colData(rse_gene) <- df
df
rse_gene <- add_predictions(rse_gene)
rse_gene <- add_metadata(rse_gene)
DESeqDataSet(rse_gene, ~ Sex + Age + pmi + Case)
colData(rse_gene)
load("SRP056604/rse_gene.Rdata")
rse_gene
colData(rse_gene)
rse_gene <- scale_counts(rse_gene)
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
for(i in 1:length(demo_info)){
elem <- demo_info[[i]]
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
}
df <- cbind(colData(rse_gene),
data.frame(Age = age_vec, Sex = sex_vec,
Case = case_vec))
colData(rse_gene) <- df
df
rse_gene <- add_predictions(rse_gene)
rse_gene <- add_metadata(rse_gene)
DESeqDataSet(rse_gene, ~ Sex + Age + pmi + Case)
colData(rse_gene)
"control" %in% "age control"
str_detect("age control", "control")
#download_study("SRP056604")
load("SRP056604/rse_gene.Rdata")
rse_gene
colData(rse_gene)
rse_gene <- scale_counts(rse_gene)
demo_info <- colData(rse_gene)$characteristics
age_vec <- c()
sex_vec <- c()
case_vec <- c()
title_vec <- c()
for(i in 1:length(demo_info)){
elem <- demo_info[[i]]
age <- (elem[1] %>% str_split(":"))[[1]][2]
sex <- (elem[3] %>% str_split(":"))[[1]][2]
case <- (elem[2] %>% str_split(":"))[[1]][2]
if(str_detect(case, "control")){
title <- "control"
} else{
title <- "LOAD"
}
age_vec <- c(age_vec, age)
sex_vec <- c(sex_vec, sex)
case_vec <- c(case_vec, case)
title_vec <- c(title_vec, title)
}
df <- cbind(colData(rse_gene),
data.frame(Age = age_vec, Sex = sex_vec,
Case = case_vec, Title = title_vec))
colData(rse_gene) <- df
df
rse_gene <- add_predictions(rse_gene)
rse_gene <- add_metadata(rse_gene)
DESeqDataSet(rse_gene, ~ Sex + Age + pmi + Title)
colData(rse_gene)
colData(rse_gene)$sex
colData(rse_gene)$Sex
colData(rse_gene)$Age
colData(rse_gene)$age
DESeqDataSet(rse_gene, ~ Sex + age + pmi + Title)
DESeq(rse_gene)
DEseq_data <- DESeqDataSet(rse_gene, ~ Sex + age + pmi + Title)
DESeq(DEseq_data)
deseq_analysis <- DESeq(DEseq_data)
plotMA(rse_gene)
plotMA(deseq_analysis)
results(DEseq_data)
results(deseq_analysis)
deseq_res <- results(deseq_analysis)
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue))
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue),
xlab = "log2FoldChange", y = "-log10(pvalue)")
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue),
xlab = "log2FoldChange", ylab = "-log10(pvalue)")
ablines(v = 2, col = "r")
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue),
xlab = "log2FoldChange", ylab = "-log10(pvalue)")
abline(v = 2, col = "r")
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue),
xlab = "log2FoldChange", ylab = "-log10(pvalue)")
abline(v = 2, col = "red")
abline(v = -2, col = "red")
deseq_res$padj
?points
plot(deseq_res$log2FoldChange, -log10(deseq_res$pvalue),
xlab = "log2FoldChange", ylab = "-log10(pvalue)")
points(deseq_res$log2FoldChange[deseq_res$padj <= 0.05],
-log10(deseq_res$pvalue[deseq_res$padj <= 0.05]), col="green")
abline(v = 2, col = "red")
abline(v = -2, col = "red")
library(clusterProfiler)
library(org.Hs.eg.db)
nrow(df_all)
df_all <- read.csv("CleanedData.csv", strip.white = T)
setwd("~/Desktop/SleepHealth/CovariatesMerging")
df_all <- read.csv("CleanedData.csv", strip.white = T)
nrow(df_all)
sum(!is.na(df_all$WTINT2YR))
sum(!is.na(df_all$WTMEC2YR))
sum(!is.na(df_all$WTSAF2YR))
